<?xml version="1.0"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.projectomakase.omakase</groupId>
    <artifactId>omakase-parent</artifactId>
    <version>1.1-SNAPSHOT</version>
    <name>omakase-parent</name>
    <description>Top-Level POM for Omakase.</description>

    <packaging>pom</packaging>

    <properties>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- plugin versions -->
        <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
        <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>2.10.1</maven-javadoc-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-scm-plugin.version>1.8.1</maven-scm-plugin.version>
        <maven-assembly-plugin.version>2.2.1</maven-assembly-plugin.version>
        <maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
        <org.wildfly.plugins.maven.plugin.version>1.0.0.Final</org.wildfly.plugins.maven.plugin.version>
        <war.plugin.version>2.4</war.plugin.version>
        <surefire.plugin.version>2.10</surefire.plugin.version>
        <jrebel-maven-plugin.version>1.1.5</jrebel-maven-plugin.version>
        <git-commit-id-plugin.version>2.1.12</git-commit-id-plugin.version>
        <sonar-maven-plugin.version>2.5</sonar-maven-plugin.version>
        <versions-maven-plugin.version>2.1</versions-maven-plugin.version>
        <docker-maven-plugin.version>0.13.2</docker-maven-plugin.version>
        <jacoco-maven-plugin.version>0.7.5.201505241946</jacoco-maven-plugin.version>

        <!-- dependency versions -->
        <activemq-camel.version>5.11.1</activemq-camel.version>
        <aws-java-sdk.version>1.12.261</aws-java-sdk.version>
        <camel.version>2.15.0</camel.version>
        <commons-net.version>3.3</commons-net.version>
        <deltaspike.version>1.2.1</deltaspike.version>
        <guava.version>18.0</guava.version>
        <hlsparserj.version>1.0.0</hlsparserj.version>
        <httpclient.version>4.2.6</httpclient.version>
        <infinispan.version>7.2.3.Final</infinispan.version>
        <jackson.version>2.4.1</jackson.version>
        <jackson-datatype-guava.version>2.4.0</jackson-datatype-guava.version>
        <javax.json.version>1.0.3</javax.json.version>
        <jboss-jacc-api_1.5_spec.version>1.0.0.Final</jboss-jacc-api_1.5_spec.version>
        <jboss-logmanager.version>1.5.2.Final</jboss-logmanager.version>
        <jboss-logging.version>3.1.4.GA</jboss-logging.version>
        <jcr.version>2.0</jcr.version>
        <jcrom.version>2.1.0</jcrom.version>
        <joda-time.version>2.8.1</joda-time.version>
        <jsch.version>0.1.51</jsch.version>
        <json-patch.version>1.8</json-patch.version>
        <modelmapper.version>0.7.3</modelmapper.version>
        <modeshape.version>4.4.0.Final</modeshape.version>
        <picketbox.version>4.0.21.Final</picketbox.version>
        <reflections.version>0.9.9</reflections.version>
        <wildfly.version>8.2.2.Final</wildfly.version>

        <!-- test dependency versions -->
        <arquillian_universe.version>1.0.0.Alpha1</arquillian_universe.version>
        <awaitility.version>1.6.1</awaitility.version>
        <assertj-core.version>3.2.0</assertj-core.version>
        <ftpserver-core.version>1.0.6</ftpserver-core.version>
        <groovy-all.version>2.3.6</groovy-all.version>
        <httpunit.version>1.7</httpunit.version>
        <jacoco.version>0.7.5.201505241946</jacoco.version>
        <junit.version>4.11</junit.version>
        <mockFtpServer.version>2.5</mockFtpServer.version>
        <mockito-all.version>1.9.5</mockito-all.version>
        <rest-assured.version>2.3.4</rest-assured.version>
        <shrinkwrap-resolver-depchain.version>2.2.0</shrinkwrap-resolver-depchain.version>
        <slf4j-jboss-logmanager.version>1.0.3.GA</slf4j-jboss-logmanager.version>
        <slf4j-log4j12.version>1.7.7</slf4j-log4j12.version>
        <sshd-core.version>0.10.0</sshd-core.version>

        <docker.tag>snapshot</docker.tag>
        <reuse.forks>true</reuse.forks>
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
    </properties>

    <repositories>
        <repository>
            <id>project.local</id>
            <name>project</name>
            <url>file:${project.basedir}/repo</url>
        </repository>
        <repository>
            <id>jboss-releases</id>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <modules>
        <module>omakase-commons</module>
        <module>omakase</module>
        <module>omakase-task</module>
        <module>omakase-worker</module>
        <module>omakase-tool</module>
        <module>omakase-distribution</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.projectomakase.omakase</groupId>
                <artifactId>omakase-worker</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectomakase.omakase</groupId>
                <artifactId>omakase-commons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectomakase.omakase</groupId>
                <artifactId>omakase-task</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- JBoss Java EE -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>jboss-javaee-7.0-with-resteasy</artifactId>
                <version>${wildfly.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- AWS Java SDK -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-glacier</artifactId>
                <version>${aws-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${aws-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sns</artifactId>
                <version>${aws-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sqs</artifactId>
                <version>${aws-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-core</artifactId>
                <version>${aws-java-sdk.version}</version>
            </dependency>
            <!-- Required by AWS Java SDK Core, Locking to specific version -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${jboss-logging.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.arquillian</groupId>
                <artifactId>arquillian-universe</artifactId>
                <version>${arquillian_universe.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${infinispan.version}</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${maven-scm-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.zeroturnaround</groupId>
                    <artifactId>jrebel-maven-plugin</artifactId>
                    <version>${jrebel-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${org.wildfly.plugins.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${git-commit-id-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.sonar</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jolokia</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <!-- required to stop build warnings -->
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images/>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>install</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>install</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <tag>${project.version}</tag>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <destFile>${sonar.jacoco.reportPath}</destFile>
                </configuration>
                <executions>
                    <execution>
                        <id>agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
